buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.ratpack:ratpack-gradle:1.6.0"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
    id 'nu.studer.jooq' version '3.0.3'
}

apply plugin: "io.ratpack.ratpack-groovy"
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "idea"

repositories {
    jcenter()
}

dependencies {
    // Default SLF4J binding.  Note that this is a blocking implementation.
    // See here for a non blocking appender http://logging.apache.org/log4j/2.x/manual/async.html
    runtime 'org.slf4j:slf4j-simple:1.7.25'

    compile 'com.zaxxer:HikariCP:3.3.1'
    compile "io.ratpack:ratpack-jdbc-tx:1.6.0"
    compile "io.ratpack:ratpack-hikari:1.6.0"
    compile "org.flywaydb:flyway-core:5.2.4"
    compile 'org.jooq:jooq:3.11.10'
    compile 'org.postgresql:postgresql:42.2.1'

    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"

    jooqRuntime 'org.postgresql:postgresql:42.2.1'

    compile 'javax.annotation:javax.annotation-api:1.3.2'
}

sourceSets.main.java.srcDir new File(projectDir, 'src/main/generated/')
idea {
    module {
        generatedSourceDirs += file('src/main/generated/')
    }
}

flyway {
    url = databaseUrl
    user = databaseUser
    password = databasePassword
}

jooq {
    version = '3.11.0'
    edition = 'OSS'
    swami(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/swami'
            user = 'swami_user'
            password = 'Password1!'
        }
        generator {
            database {
                includes = ".*"
                excludes = ""
                inputSchema = "public"
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.jondejong.eswami.model'
                directory = "${this.project.projectDir}/src/main/generated"
            }
        }
    }
}

project.tasks.getByName('generateSwamiJooqSchemaSource').dependsOn("flywayMigrate")



